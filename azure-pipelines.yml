trigger:
- master

resources:
- repo: self

variables:
  dockerRegistryServiceConnection: 'react'
  imageRepository: 'reactfrontedcode'
  containerRegistry: 'reactfrontedcode.azurecr.io'
  dockerfilePath: '$(Build.SourcesDirectory)/Dockerfile'
  tag: '$(Build.BuildId)'
  
  # VM details
  vmImageName: 'ubuntu-latest'
  vmIpAddress: '20.197.41.8'
  vmUser: 'siddhant'
  vmPassword: '$(vmPrivatePassword)' 

stages:
- stage: Build
  displayName: Build and push stage
  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          $(tag)

- stage: Deploy
  displayName: Deploy stage
  dependsOn: Build
  jobs:
  - job: Deploy
    displayName: Deploy to VM
    pool:
      vmImage: $(vmImageName)
    steps:
    - script: |
        echo "Fetching image from container registry..."
        docker pull $(containerRegistry)/$(imageRepository):$(tag)
      displayName: 'Pull Docker image'

    - script: |
        echo "Saving Docker image to a tar file..."
        docker save $(containerRegistry)/$(imageRepository):$(tag) -o image.tar
      displayName: 'Save Docker image'

    - script: |
        echo "Copying Docker image to VM..."
        scp -i $(vmPrivateKey) image.tar $(vmUser)@$(vmIpAddress):/tmp/
      displayName: 'Transfer Docker image to VM'

    - script: |
        echo "Loading Docker image on VM..."
        ssh -i $(vmPrivateKey) $(vmUser)@$(vmIpAddress) 'docker load -i /tmp/image.tar'
      displayName: 'Load Docker image on VM'

    - script: |
        echo "Running Docker container on VM..."
        ssh -i $(vmPrivateKey) $(vmUser)@$(vmIpAddress) 'docker run -d --rm --name my_container $(containerRegistry)/$(imageRepository):$(tag)'
      displayName: 'Run Docker container on VM'
